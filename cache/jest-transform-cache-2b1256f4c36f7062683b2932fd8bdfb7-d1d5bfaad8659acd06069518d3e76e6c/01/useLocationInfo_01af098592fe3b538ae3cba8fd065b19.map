{"version":3,"names":["useLocationInfo","publicIp","useState","loading","setLoading","locationData","setLocationData","fetchIpInfo","instanceIpAPI","get","then","response","data","city","country","lat","lon","catch","error","console","log","useEffect"],"sources":["useLocationInfo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { instanceIpAPI } from \"../axios\";\n\nconst useLocationInfo = (publicIp) => {\n\n  const [loading, setLoading] = useState(true);\n  const [locationData, setLocationData] = useState(null);\n  \n  const fetchIpInfo = async () => {\n    await instanceIpAPI\n      .get(`/${publicIp}`)\n      .then((response) => {\n        const { data } = response;\n        setLocationData({\n          city: data.city,\n          country: data.country,\n          lat: data.lat,\n          lon: data.lon,\n        });\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"ERROR: \", error);\n      });\n  };\n  \n  useEffect(() => {\n    fetchIpInfo();\n  }, [publicIp]);\n  return { loading, locationData };\n};\n\nexport default useLocationInfo;"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAc;EAEpC,gBAA8B,IAAAC,eAAA,EAAS,IAAT,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwC,IAAAF,eAAA,EAAS,IAAT,CAAxC;EAAA;EAAA,IAAOG,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMC,WAAW;IAAA,2CAAG,aAAY;MAC9B,MAAMC,oBAAA,CACHC,GADG,OACKR,QADL,EAEHS,IAFG,CAEE,UAACC,QAAD,EAAc;QAClB,IAAQC,IAAR,GAAiBD,QAAjB,CAAQC,IAAR;QACAN,eAAe,CAAC;UACdO,IAAI,EAAED,IAAI,CAACC,IADG;UAEdC,OAAO,EAAEF,IAAI,CAACE,OAFA;UAGdC,GAAG,EAAEH,IAAI,CAACG,GAHI;UAIdC,GAAG,EAAEJ,IAAI,CAACI;QAJI,CAAD,CAAf;QAMAZ,UAAU,CAAC,KAAD,CAAV;MACD,CAXG,EAYHa,KAZG,CAYG,UAACC,KAAD,EAAW;QAChBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;MACD,CAdG,CAAN;IAeD,CAhBgB;;IAAA,gBAAXX,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAkBA,IAAAc,gBAAA,EAAU,YAAM;IACdd,WAAW;EACZ,CAFD,EAEG,CAACN,QAAD,CAFH;EAGA,OAAO;IAAEE,OAAO,EAAPA,OAAF;IAAWE,YAAY,EAAZA;EAAX,CAAP;AACD,CA3BD;;eA6BeL,e"}