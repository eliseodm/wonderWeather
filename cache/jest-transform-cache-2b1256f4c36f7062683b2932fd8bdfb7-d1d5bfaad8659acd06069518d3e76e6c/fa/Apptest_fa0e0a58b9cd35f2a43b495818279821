04e18c7dbeb62244408ed51cea7d8c93
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactNative2 = require("@testing-library/react-native");

var _extendExpect = require("@testing-library/jest-native/extend-expect");

var _index = require("../__mockData__/index");

var _App = _interopRequireDefault(require("../App"));

var _MainWeatherCard = _interopRequireDefault(require("../components/MainWeatherCard/MainWeatherCard"));

var _ForecastContainer = _interopRequireDefault(require("../components/ForecastContainer/ForecastContainer"));

it('Generates a Snapshot of <App/>', function () {
  var _render = (0, _reactNative2.render)(_react.default.createElement(_App.default, null)),
      toJSON = _render.toJSON;

  expect(toJSON()).toMatchSnapshot();
});

var mainComponent = _react.default.createElement(_App.default, null);

it('Show ActivityIndicator before fetch fata', function () {
  var _render2 = (0, _reactNative2.render)(mainComponent),
      getByTestId = _render2.getByTestId;

  expect(getByTestId('App.ActivityIndicator')).toBeTruthy();
});
describe('Show current location info', function () {
  it('City', function () {
    var _render3 = (0, _reactNative2.render)(_react.default.createElement(_MainWeatherCard.default, {
      cityInfo: _index.mock_cityInfo,
      isCurrentLocation: true
    })),
        getByTestId = _render3.getByTestId;

    expect(getByTestId("MainWeatherCard.city")).toHaveTextContent("San Miguel de Tucum√°n");
  });
  it('Country', function () {
    var _render4 = (0, _reactNative2.render)(_react.default.createElement(_MainWeatherCard.default, {
      cityInfo: _index.mock_cityInfo,
      isCurrentLocation: true
    })),
        getByTestId = _render4.getByTestId;

    expect(getByTestId("MainWeatherCard.country")).toHaveTextContent("Argentina");
  });
});
it('Temp', function () {
  var _render5 = (0, _reactNative2.render)(_react.default.createElement(_MainWeatherCard.default, {
    cityInfo: _index.mock_cityInfo,
    isCurrentLocation: true
  })),
      getByTestId = _render5.getByTestId;

  expect(getByTestId("MainWeatherCard.temp")).toHaveTextContent("24");
});
it('Get current location next 5 days forecast', function () {
  (0, _reactNative2.render)(_react.default.createElement(_ForecastContainer.default, {
    forecastInfo: _index.mock_forecastInfo
  }));
  expect(_reactNative2.screen.getAllByTestId("ForecastCcontainer.days").length).toBe(5);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsInJlbmRlciIsInRvSlNPTiIsImV4cGVjdCIsInRvTWF0Y2hTbmFwc2hvdCIsIm1haW5Db21wb25lbnQiLCJnZXRCeVRlc3RJZCIsInRvQmVUcnV0aHkiLCJkZXNjcmliZSIsIm1vY2tfY2l0eUluZm8iLCJ0b0hhdmVUZXh0Q29udGVudCIsIm1vY2tfZm9yZWNhc3RJbmZvIiwic2NyZWVuIiwiZ2V0QWxsQnlUZXN0SWQiLCJsZW5ndGgiLCJ0b0JlIl0sInNvdXJjZXMiOlsiQXBwLXRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgdG9IYXZlVGV4dENvbnRlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L2plc3QtbmF0aXZlL2V4dGVuZC1leHBlY3QnO1xuaW1wb3J0IHsgbW9ja19jaXR5SW5mbywgbW9ja19mb3JlY2FzdEluZm8gfSBmcm9tIFwiLi4vX19tb2NrRGF0YV9fL2luZGV4XCJcbmltcG9ydCBBcHAgZnJvbSAnLi4vQXBwJztcbmltcG9ydCBNYWluV2VhdGhlckNhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9NYWluV2VhdGhlckNhcmQvTWFpbldlYXRoZXJDYXJkJztcbmltcG9ydCBGb3JlY2FzdENvbnRhaW5lciBmcm9tICcuLi9jb21wb25lbnRzL0ZvcmVjYXN0Q29udGFpbmVyL0ZvcmVjYXN0Q29udGFpbmVyJztcblxuaXQoJ0dlbmVyYXRlcyBhIFNuYXBzaG90IG9mIDxBcHAvPicsICgpID0+IHtcbiAgY29uc3QgeyB0b0pTT04gfSA9cmVuZGVyKDxBcHAgLz4pO1xuICBleHBlY3QodG9KU09OKCkpLnRvTWF0Y2hTbmFwc2hvdCgpXG59KTtcblxuY29uc3QgbWFpbkNvbXBvbmVudCA9IDxBcHAgLz47XG5cbi8vc2hvdyBBY3Rpdml0eUluZGljYXRvciBiZWZvcmUgZmV0Y2ggZGF0YVxuaXQoJ1Nob3cgQWN0aXZpdHlJbmRpY2F0b3IgYmVmb3JlIGZldGNoIGZhdGEnLCAoKSA9PiB7XG4gIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihtYWluQ29tcG9uZW50KTtcbiAgXG4gIGV4cGVjdChnZXRCeVRlc3RJZCgnQXBwLkFjdGl2aXR5SW5kaWNhdG9yJykpLnRvQmVUcnV0aHkoKTtcbn0pO1xuXG4vL3Nob3cgY3VycmVudCBsb2NhdGlvbiBpbmZvXG5kZXNjcmliZSgnU2hvdyBjdXJyZW50IGxvY2F0aW9uIGluZm8nLCAoKSA9PiB7XG4gIGl0KCdDaXR5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxNYWluV2VhdGhlckNhcmQgIGNpdHlJbmZvPXttb2NrX2NpdHlJbmZvfSBpc0N1cnJlbnRMb2NhdGlvbj17dHJ1ZX0gLz5cbiAgICApXG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKFwiTWFpbldlYXRoZXJDYXJkLmNpdHlcIikpLnRvSGF2ZVRleHRDb250ZW50KFwiU2FuIE1pZ3VlbCBkZSBUdWN1bcOhblwiKTtcbiAgfSlcbiAgXG4gIGl0KCdDb3VudHJ5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxNYWluV2VhdGhlckNhcmQgIGNpdHlJbmZvPXttb2NrX2NpdHlJbmZvfSBpc0N1cnJlbnRMb2NhdGlvbj17dHJ1ZX0gLz5cbiAgICApXG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKFwiTWFpbldlYXRoZXJDYXJkLmNvdW50cnlcIikpLnRvSGF2ZVRleHRDb250ZW50KFwiQXJnZW50aW5hXCIpO1xuICB9KVxufSlcbiAgaXQoJ1RlbXAnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPE1haW5XZWF0aGVyQ2FyZCAgY2l0eUluZm89e21vY2tfY2l0eUluZm99IGlzQ3VycmVudExvY2F0aW9uPXt0cnVlfSAvPlxuICAgIClcbiAgICBleHBlY3QoZ2V0QnlUZXN0SWQoXCJNYWluV2VhdGhlckNhcmQudGVtcFwiKSkudG9IYXZlVGV4dENvbnRlbnQoXCIyNFwiKTtcbiAgfSlcblxuLy9zaG93IGN1cnJlbnQgbG9jYXRpb24gbmV4dCA1IGRheXMgZm9yZWNhc3RcblxuICBpdCgnR2V0IGN1cnJlbnQgbG9jYXRpb24gbmV4dCA1IGRheXMgZm9yZWNhc3QnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxGb3JlY2FzdENvbnRhaW5lciBmb3JlY2FzdEluZm89e21vY2tfZm9yZWNhc3RJbmZvfSAvPilcbiAgICBleHBlY3Qoc2NyZWVuLmdldEFsbEJ5VGVzdElkKFwiRm9yZWNhc3RDY29udGFpbmVyLmRheXNcIikubGVuZ3RoKS50b0JlKDUpO1xuICB9KVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxFQUFFLENBQUMsZ0NBQUQsRUFBbUMsWUFBTTtFQUN6QyxjQUFrQixJQUFBQyxvQkFBQSxFQUFPLDZCQUFDLFlBQUQsT0FBUCxDQUFsQjtFQUFBLElBQVFDLE1BQVIsV0FBUUEsTUFBUjs7RUFDQUMsTUFBTSxDQUFDRCxNQUFNLEVBQVAsQ0FBTixDQUFpQkUsZUFBakI7QUFDRCxDQUhDLENBQUY7O0FBS0EsSUFBTUMsYUFBYSxHQUFHLDZCQUFDLFlBQUQsT0FBdEI7O0FBR0FMLEVBQUUsQ0FBQywwQ0FBRCxFQUE2QyxZQUFNO0VBQ25ELGVBQXdCLElBQUFDLG9CQUFBLEVBQU9JLGFBQVAsQ0FBeEI7RUFBQSxJQUFRQyxXQUFSLFlBQVFBLFdBQVI7O0VBRUFILE1BQU0sQ0FBQ0csV0FBVyxDQUFDLHVCQUFELENBQVosQ0FBTixDQUE2Q0MsVUFBN0M7QUFDRCxDQUpDLENBQUY7QUFPQUMsUUFBUSxDQUFDLDRCQUFELEVBQStCLFlBQU07RUFDM0NSLEVBQUUsQ0FBQyxNQUFELEVBQVMsWUFBTTtJQUNmLGVBQXdCLElBQUFDLG9CQUFBLEVBQ3RCLDZCQUFDLHdCQUFEO01BQWtCLFFBQVEsRUFBRVEsb0JBQTVCO01BQTJDLGlCQUFpQixFQUFFO0lBQTlELEVBRHNCLENBQXhCO0lBQUEsSUFBUUgsV0FBUixZQUFRQSxXQUFSOztJQUdBSCxNQUFNLENBQUNHLFdBQVcsQ0FBQyxzQkFBRCxDQUFaLENBQU4sQ0FBNENJLGlCQUE1QyxDQUE4RCx1QkFBOUQ7RUFDRCxDQUxDLENBQUY7RUFPQVYsRUFBRSxDQUFDLFNBQUQsRUFBWSxZQUFNO0lBQ2xCLGVBQXdCLElBQUFDLG9CQUFBLEVBQ3RCLDZCQUFDLHdCQUFEO01BQWtCLFFBQVEsRUFBRVEsb0JBQTVCO01BQTJDLGlCQUFpQixFQUFFO0lBQTlELEVBRHNCLENBQXhCO0lBQUEsSUFBUUgsV0FBUixZQUFRQSxXQUFSOztJQUdBSCxNQUFNLENBQUNHLFdBQVcsQ0FBQyx5QkFBRCxDQUFaLENBQU4sQ0FBK0NJLGlCQUEvQyxDQUFpRSxXQUFqRTtFQUNELENBTEMsQ0FBRjtBQU1ELENBZE8sQ0FBUjtBQWVFVixFQUFFLENBQUMsTUFBRCxFQUFTLFlBQU07RUFDZixlQUF3QixJQUFBQyxvQkFBQSxFQUN0Qiw2QkFBQyx3QkFBRDtJQUFrQixRQUFRLEVBQUVRLG9CQUE1QjtJQUEyQyxpQkFBaUIsRUFBRTtFQUE5RCxFQURzQixDQUF4QjtFQUFBLElBQVFILFdBQVIsWUFBUUEsV0FBUjs7RUFHQUgsTUFBTSxDQUFDRyxXQUFXLENBQUMsc0JBQUQsQ0FBWixDQUFOLENBQTRDSSxpQkFBNUMsQ0FBOEQsSUFBOUQ7QUFDRCxDQUxDLENBQUY7QUFTQVYsRUFBRSxDQUFDLDJDQUFELEVBQThDLFlBQU07RUFDcEQsSUFBQUMsb0JBQUEsRUFBTyw2QkFBQywwQkFBRDtJQUFtQixZQUFZLEVBQUVVO0VBQWpDLEVBQVA7RUFDQVIsTUFBTSxDQUFDUyxvQkFBQSxDQUFPQyxjQUFQLENBQXNCLHlCQUF0QixFQUFpREMsTUFBbEQsQ0FBTixDQUFnRUMsSUFBaEUsQ0FBcUUsQ0FBckU7QUFDRCxDQUhDLENBQUYifQ==