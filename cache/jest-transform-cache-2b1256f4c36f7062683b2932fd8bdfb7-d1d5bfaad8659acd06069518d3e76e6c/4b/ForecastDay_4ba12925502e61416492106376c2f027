bd31c7ca3ebc1f708d3ba957e64c1ceb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

function cov_czjijv64p() {
  var path = "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/components/ForecastDay/ForecastDay.js";
  var hash = "e4538e762940b5b8e00258e6212d465fa6960b24";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/components/ForecastDay/ForecastDay.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "1": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 32,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "ForecastDay",
        decl: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 20
          }
        },
        loc: {
          start: {
            line: 4,
            column: 54
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 4
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e4538e762940b5b8e00258e6212d465fa6960b24"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_czjijv64p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_czjijv64p();

function ForecastDay(_ref) {
  var day = _ref.day,
      minTemp = _ref.minTemp,
      maxTemp = _ref.maxTemp,
      icon = _ref.icon;
  cov_czjijv64p().f[0]++;
  cov_czjijv64p().s[0]++;
  return _react.default.createElement(_reactNative.View, {
    style: styles.forecastDay
  }, _react.default.createElement(_reactNative.Text, null, day), _react.default.createElement(_reactNative.Image, {
    style: {
      width: 50,
      height: 50
    },
    source: {
      uri: "https://openweathermap.org/img/wn/" + icon + "@2x.png"
    }
  }), _react.default.createElement(_reactNative.Text, {
    style: styles.forecastTemps
  }, Math.round(maxTemp), " \xBAC"), _react.default.createElement(_reactNative.Text, {
    style: styles.forecastTemps
  }, Math.round(minTemp), " \xBAC"));
}

var styles = (cov_czjijv64p().s[1]++, _reactNative.StyleSheet.create({
  forecastDay: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10
  },
  forecastTemps: {
    fontSize: 16,
    fontWeight: 'bold',
    textAlign: 'center'
  }
}));
var _default = ForecastDay;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGb3JlY2FzdERheSIsImRheSIsIm1pblRlbXAiLCJtYXhUZW1wIiwiaWNvbiIsInN0eWxlcyIsImZvcmVjYXN0RGF5Iiwid2lkdGgiLCJoZWlnaHQiLCJ1cmkiLCJmb3JlY2FzdFRlbXBzIiwiTWF0aCIsInJvdW5kIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwibWFyZ2luQm90dG9tIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwidGV4dEFsaWduIl0sInNvdXJjZXMiOlsiRm9yZWNhc3REYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVTaGVldCwgVGV4dCwgVmlldywgSW1hZ2UgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gRm9yZWNhc3REYXkoeyBkYXksIG1pblRlbXAsIG1heFRlbXAsIGljb24gfSkge1xuICAgIFxuICAgIHJldHVybihcbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5mb3JlY2FzdERheX0+XG4gICAgICAgICAgICA8VGV4dD57IGRheSB9PC9UZXh0PlxuICAgICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7d2lkdGg6IDUwLCBoZWlnaHQ6IDUwfX1cbiAgICAgICAgICAgICAgICAgICAgc291cmNlPXt7XG4gICAgICAgICAgICAgICAgICAgIHVyaTogYGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93bi8ke2ljb259QDJ4LnBuZ2AsXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5mb3JlY2FzdFRlbXBzfT57TWF0aC5yb3VuZChtYXhUZW1wKX0gwrpDPC9UZXh0PlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5mb3JlY2FzdFRlbXBzfT57TWF0aC5yb3VuZChtaW5UZW1wKX0gwrpDPC9UZXh0PlxuICAgICAgICA8L1ZpZXc+XG4gICAgKVxufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgZm9yZWNhc3REYXk6e1xuICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBtYXJnaW5Cb3R0b206IDEwLFxuICAgIH0sICBcbiAgICBmb3JlY2FzdFRlbXBzOiB7XG4gICAgICAgIGZvbnRTaXplOiAxNixcbiAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgfSwgIFxufSlcblxuZXhwb3J0IGRlZmF1bHQgRm9yZWNhc3REYXk7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsV0FBVCxPQUFzRDtFQUFBLElBQS9CQyxHQUErQixRQUEvQkEsR0FBK0I7RUFBQSxJQUExQkMsT0FBMEIsUUFBMUJBLE9BQTBCO0VBQUEsSUFBakJDLE9BQWlCLFFBQWpCQSxPQUFpQjtFQUFBLElBQVJDLElBQVEsUUFBUkEsSUFBUTtFQUFBO0VBQUE7RUFFbEQsT0FDSSw2QkFBQyxpQkFBRDtJQUFNLEtBQUssRUFBRUMsTUFBTSxDQUFDQztFQUFwQixHQUNJLDZCQUFDLGlCQUFELFFBQVFMLEdBQVIsQ0FESixFQUVJLDZCQUFDLGtCQUFEO0lBQ1EsS0FBSyxFQUFFO01BQUNNLEtBQUssRUFBRSxFQUFSO01BQVlDLE1BQU0sRUFBRTtJQUFwQixDQURmO0lBRVEsTUFBTSxFQUFFO01BQ1JDLEdBQUcseUNBQXVDTCxJQUF2QztJQURLO0VBRmhCLEVBRkosRUFRSSw2QkFBQyxpQkFBRDtJQUFNLEtBQUssRUFBRUMsTUFBTSxDQUFDSztFQUFwQixHQUFvQ0MsSUFBSSxDQUFDQyxLQUFMLENBQVdULE9BQVgsQ0FBcEMsV0FSSixFQVNJLDZCQUFDLGlCQUFEO0lBQU0sS0FBSyxFQUFFRSxNQUFNLENBQUNLO0VBQXBCLEdBQW9DQyxJQUFJLENBQUNDLEtBQUwsQ0FBV1YsT0FBWCxDQUFwQyxXQVRKLENBREo7QUFhSDs7QUFFRCxJQUFNRyxNQUFNLDRCQUFHUSx1QkFBQSxDQUFXQyxNQUFYLENBQWtCO0VBQzdCUixXQUFXLEVBQUM7SUFDUlMsYUFBYSxFQUFFLEtBRFA7SUFFUkMsVUFBVSxFQUFFLFFBRko7SUFHVkMsWUFBWSxFQUFFO0VBSEosQ0FEaUI7RUFNN0JQLGFBQWEsRUFBRTtJQUNYUSxRQUFRLEVBQUUsRUFEQztJQUVYQyxVQUFVLEVBQUUsTUFGRDtJQUdYQyxTQUFTLEVBQUU7RUFIQTtBQU5jLENBQWxCLENBQUgsQ0FBWjtlQWFlcEIsVyJ9