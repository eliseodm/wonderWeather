{"version":3,"names":["useForecastInfo","lat","lon","useState","loading","setLoading","forecastInfo","setForecastInfo","todayInfo","setTodayInfo","openWeatherKey","fetchForecastInfo","response","instanceOpenWeatherMap","get","days","data","daily","current","daysInfo","forEach","day","length","push","dayNum","Date","dt","getDay","minTemp","Math","round","temp","min","maxTemp","max","icon","weather","shift","error","console","useEffect"],"sources":["useForecastInfo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { instanceOpenWeatherMap } from \"../axios\";\n\nconst useForecastInfo = (lat, lon) => {\n  const [loading, setLoading] = useState(true);\n  const [forecastInfo, setForecastInfo] = useState([]);\n  const [todayInfo, setTodayInfo] = useState({});\n\n  const openWeatherKey = `802b50500b2e8e9b6499ebd055e046c1`;\n\n  const fetchForecastInfo = async () => {\n      setLoading(true);\n      try {\n        const response = await instanceOpenWeatherMap.get(\n        `/onecall?lat=${lat}&lon=${lon}&units=metric&lang=es&exclude=minutely,hourly,alerts&appid=${openWeatherKey}`\n      );\n      const days = response.data.daily;\n      const { current } = response.data;\n      let daysInfo = [];\n\n      days.forEach((day) => {\n        if (daysInfo.length < 6) {\n          daysInfo.push({\n            dayNum: new Date(day.dt * 1000).getDay(),\n            minTemp: Math.round(day.temp.min),\n            maxTemp: Math.round(day.temp.max),\n            icon: day.weather[0].icon,\n          });\n        }\n      });\n      setTodayInfo({\n        temp: Math.round(current.temp),\n        minTemp: Math.round(daysInfo[0].minTemp),\n        maxTemp: Math.round(daysInfo[0].maxTemp),\n        icon: daysInfo[0].icon,\n      });\n\n      daysInfo.shift();\n      setForecastInfo(daysInfo);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };  \n\n  useEffect(() => {\n    if (lat && lon) fetchForecastInfo();\n  }, [lat, lon]);\n\n  return { forecastInfo, todayInfo, loading };\n};\n\nexport default useForecastInfo;"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;EACpC,gBAA8B,IAAAC,eAAA,EAAS,IAAT,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwC,IAAAF,eAAA,EAAS,EAAT,CAAxC;EAAA;EAAA,IAAOG,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAkC,IAAAJ,eAAA,EAAS,EAAT,CAAlC;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,cAAc,qCAApB;;EAEA,IAAMC,iBAAiB;IAAA,2CAAG,aAAY;MAClCN,UAAU,CAAC,IAAD,CAAV;;MACA,IAAI;QACF,IAAMO,QAAQ,SAASC,6BAAA,CAAuBC,GAAvB,mBACPb,GADO,aACIC,GADJ,mEACqEQ,cADrE,CAAvB;QAGF,IAAMK,IAAI,GAAGH,QAAQ,CAACI,IAAT,CAAcC,KAA3B;QACA,IAAQC,OAAR,GAAoBN,QAAQ,CAACI,IAA7B,CAAQE,OAAR;QACA,IAAIC,QAAQ,GAAG,EAAf;QAEAJ,IAAI,CAACK,OAAL,CAAa,UAACC,GAAD,EAAS;UACpB,IAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;YACvBH,QAAQ,CAACI,IAAT,CAAc;cACZC,MAAM,EAAE,IAAIC,IAAJ,CAASJ,GAAG,CAACK,EAAJ,GAAS,IAAlB,EAAwBC,MAAxB,EADI;cAEZC,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,IAAJ,CAASC,GAApB,CAFG;cAGZC,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,IAAJ,CAASG,GAApB,CAHG;cAIZC,IAAI,EAAEd,GAAG,CAACe,OAAJ,CAAY,CAAZ,EAAeD;YAJT,CAAd;UAMD;QACF,CATD;QAUA1B,YAAY,CAAC;UACXsB,IAAI,EAAEF,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACa,IAAnB,CADK;UAEXH,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAAC,CAAD,CAAR,CAAYS,OAAvB,CAFE;UAGXK,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAAC,CAAD,CAAR,CAAYc,OAAvB,CAHE;UAIXE,IAAI,EAAEhB,QAAQ,CAAC,CAAD,CAAR,CAAYgB;QAJP,CAAD,CAAZ;QAOAhB,QAAQ,CAACkB,KAAT;QACA9B,eAAe,CAACY,QAAD,CAAf;QACAd,UAAU,CAAC,KAAD,CAAV;MACD,CA5BC,CA4BA,OAAOiC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACD;IACF,CAjCsB;;IAAA,gBAAjB3B,iBAAiB;MAAA;IAAA;EAAA,GAAvB;;EAmCA,IAAA6B,gBAAA,EAAU,YAAM;IACd,IAAIvC,GAAG,IAAIC,GAAX,EAAgBS,iBAAiB;EAClC,CAFD,EAEG,CAACV,GAAD,EAAMC,GAAN,CAFH;EAIA,OAAO;IAAEI,YAAY,EAAZA,YAAF;IAAgBE,SAAS,EAATA,SAAhB;IAA2BJ,OAAO,EAAPA;EAA3B,CAAP;AACD,CA/CD;;eAiDeJ,e"}