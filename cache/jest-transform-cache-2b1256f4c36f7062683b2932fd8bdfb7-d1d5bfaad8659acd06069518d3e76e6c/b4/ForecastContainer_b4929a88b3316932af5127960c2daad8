0e4c49a405cf11f0ffad3d0255437b37
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _ForecastDay = _interopRequireDefault(require("../ForecastDay/ForecastDay"));

var _constants = require("../../constants");

function cov_1s6bklnjb2() {
  var path = "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/components/ForecastContainer/ForecastContainer.js";
  var hash = "f86d89b57e0538454a881a6245d7649ba2080f84";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/components/ForecastContainer/ForecastContainer.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "1": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "2": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 45,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "ForecastContainer",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 26
          }
        },
        loc: {
          start: {
            line: 7,
            column: 45
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 14,
            column: 42
          }
        },
        loc: {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 26,
            column: 25
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f86d89b57e0538454a881a6245d7649ba2080f84"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_1s6bklnjb2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1s6bklnjb2();

function ForecastContainer(_ref) {
  var forecastInfo = _ref.forecastInfo;
  cov_1s6bklnjb2().f[0]++;
  cov_1s6bklnjb2().s[0]++;
  return _react.default.createElement(_reactNative.View, {
    style: styles.forecastContainer
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.subtitle
  }, "Proximos 5 dias"), _react.default.createElement(_reactNative.ScrollView, {
    showsVerticalScrollIndicator: false
  }, _react.default.createElement(_reactNative.View, null, forecastInfo.map(function (day) {
    cov_1s6bklnjb2().f[1]++;
    cov_1s6bklnjb2().s[1]++;
    return _react.default.createElement(_reactNative.View, {
      testID: "ForecastContainer.days"
    }, _react.default.createElement(_ForecastDay.default, {
      key: day.dayNum,
      minTemp: day.minTemp,
      maxTemp: day.maxTemp,
      icon: day.icon,
      day: _constants.dayNames[day.dayNum]
    }));
  }))));
}

var styles = (cov_1s6bklnjb2().s[2]++, _reactNative.StyleSheet.create({
  subtitle: {
    fontSize: 24,
    marginVertical: 12,
    marginLeft: 4,
    color: '#e96e50'
  },
  forecastContainer: {
    marginTop: 16,
    height: 300
  }
}));
var _default = ForecastContainer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGb3JlY2FzdENvbnRhaW5lciIsImZvcmVjYXN0SW5mbyIsInN0eWxlcyIsImZvcmVjYXN0Q29udGFpbmVyIiwic3VidGl0bGUiLCJtYXAiLCJkYXkiLCJkYXlOdW0iLCJtaW5UZW1wIiwibWF4VGVtcCIsImljb24iLCJkYXlOYW1lcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmb250U2l6ZSIsIm1hcmdpblZlcnRpY2FsIiwibWFyZ2luTGVmdCIsImNvbG9yIiwibWFyZ2luVG9wIiwiaGVpZ2h0Il0sInNvdXJjZXMiOlsiRm9yZWNhc3RDb250YWluZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVTaGVldCwgVGV4dCwgU2Nyb2xsVmlldywgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEZvcmVjYXN0RGF5IGZyb20gJy4uL0ZvcmVjYXN0RGF5L0ZvcmVjYXN0RGF5JztcbmltcG9ydCB7IGRheU5hbWVzIH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50c1wiO1xuXG5cbmZ1bmN0aW9uIEZvcmVjYXN0Q29udGFpbmVyKHsgZm9yZWNhc3RJbmZvIH0pIHtcbiAgICByZXR1cm4oXG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuZm9yZWNhc3RDb250YWluZXJ9PlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5zdWJ0aXRsZX0+UHJveGltb3MgNSBkaWFzPC9UZXh0PlxuICAgICAgICAgICAgPFNjcm9sbFZpZXcgc2hvd3NWZXJ0aWNhbFNjcm9sbEluZGljYXRvcj17ZmFsc2V9PlxuICAgICAgICAgICAgICAgIDxWaWV3PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JlY2FzdEluZm8ubWFwKChkYXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxWaWV3IHRlc3RJRD1cIkZvcmVjYXN0Q29udGFpbmVyLmRheXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb3JlY2FzdERheVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17ZGF5LmRheU51bX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5UZW1wPXtkYXkubWluVGVtcH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhUZW1wPXtkYXkubWF4VGVtcH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uPXtkYXkuaWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXk9e2RheU5hbWVzW2RheS5kYXlOdW1dfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgICA8L1Njcm9sbFZpZXc+XG4gICAgICAgIDwvVmlldz5cbiAgICApXG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBzdWJ0aXRsZTp7XG4gICAgICAgIGZvbnRTaXplOiAyNCxcbiAgICAgICAgbWFyZ2luVmVydGljYWw6IDEyLFxuICAgICAgICBtYXJnaW5MZWZ0OiA0LFxuICAgICAgICBjb2xvcjogJyNlOTZlNTAnLFxuICAgIH0sXG4gICAgZm9yZWNhc3RDb250YWluZXI6IHtcbiAgICAgICAgbWFyZ2luVG9wOiAxNixcbiAgICAgICAgaGVpZ2h0OiAzMDAsXG4gICAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgRm9yZWNhc3RDb250YWluZXI7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0EsU0FBU0EsaUJBQVQsT0FBNkM7RUFBQSxJQUFoQkMsWUFBZ0IsUUFBaEJBLFlBQWdCO0VBQUE7RUFBQTtFQUN6QyxPQUNJLDZCQUFDLGlCQUFEO0lBQU0sS0FBSyxFQUFFQyxNQUFNLENBQUNDO0VBQXBCLEdBQ0ksNkJBQUMsaUJBQUQ7SUFBTSxLQUFLLEVBQUVELE1BQU0sQ0FBQ0U7RUFBcEIscUJBREosRUFFSSw2QkFBQyx1QkFBRDtJQUFZLDRCQUE0QixFQUFFO0VBQTFDLEdBQ0ksNkJBQUMsaUJBQUQsUUFFUUgsWUFBWSxDQUFDSSxHQUFiLENBQWlCLFVBQUNDLEdBQUQsRUFBUztJQUFBO0lBQUE7SUFDdEIsT0FDSSw2QkFBQyxpQkFBRDtNQUFNLE1BQU0sRUFBQztJQUFiLEdBQ0ksNkJBQUMsb0JBQUQ7TUFDSSxHQUFHLEVBQUVBLEdBQUcsQ0FBQ0MsTUFEYjtNQUVJLE9BQU8sRUFBRUQsR0FBRyxDQUFDRSxPQUZqQjtNQUdJLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxPQUhqQjtNQUlJLElBQUksRUFBRUgsR0FBRyxDQUFDSSxJQUpkO01BS0ksR0FBRyxFQUFFQyxtQkFBQSxDQUFTTCxHQUFHLENBQUNDLE1BQWI7SUFMVCxFQURKLENBREo7RUFXSCxDQVpELENBRlIsQ0FESixDQUZKLENBREo7QUF3Qkg7O0FBRUQsSUFBTUwsTUFBTSw2QkFBR1UsdUJBQUEsQ0FBV0MsTUFBWCxDQUFrQjtFQUM3QlQsUUFBUSxFQUFDO0lBQ0xVLFFBQVEsRUFBRSxFQURMO0lBRUxDLGNBQWMsRUFBRSxFQUZYO0lBR0xDLFVBQVUsRUFBRSxDQUhQO0lBSUxDLEtBQUssRUFBRTtFQUpGLENBRG9CO0VBTzdCZCxpQkFBaUIsRUFBRTtJQUNmZSxTQUFTLEVBQUUsRUFESTtJQUVmQyxNQUFNLEVBQUU7RUFGTztBQVBVLENBQWxCLENBQUgsQ0FBWjtlQWFlbkIsaUIifQ==