{"version":3,"names":["MainWeatherCard","cityInfo","isCurrentLocation","city","country","temp","minTemp","maxTemp","icon","styles","current","largeIcon","uri","currentTemp","Math","round","StyleSheet","create","width","textAlign","fontSize","color","flexDirection","alignItems","alignContent","height","fontWeight"],"sources":["MainWeatherCard.js"],"sourcesContent":["import { StyleSheet, View, Text, Image } from 'react-native';\nimport React from 'react';\n\n\nfunction MainWeatherCard({ cityInfo, isCurrentLocation }) {\n\n  const { city, country, temp, minTemp, maxTemp, icon } = cityInfo;\n  return (\n      <>\n          <Text style={styles.city}>{city}</Text>\n          <Text style={styles.country}>{country}</Text>\n          {isCurrentLocation === true && (\n            <Text>\n              Uicaci처n actual\n            </Text>\n          )}\n          <View style={styles.current}>\n              <Image\n                  style={styles.largeIcon}\n                  source={{\n                  uri: `https://openweathermap.org/img/wn/${icon}@4x.png`,\n                  }}\n              />\n              <Text style={styles.currentTemp}>{Math.round(temp)}째C</Text>\n              <Text style={styles.maxTemp}>Max {Math.round(maxTemp)}째C</Text>\n              <Text style={styles.minTemp}>Min {Math.round(minTemp)}째C</Text>\n          </View>\n      </>\n  );\n}\n\nexport default MainWeatherCard;\n\nconst styles = StyleSheet.create({\n    city: {\n        width: '100%',\n        textAlign: 'center',\n        fontSize: 32,\n        color: '#e96e50'\n    },\n    country: {\n        width: '100%',\n        textAlign: 'center',\n        fontSize: 24,\n        color: '#d6a99e'\n    },\n    current: {\n        flexDirection: 'column',\n        alignItems: 'flex-end',\n        alignContent: 'center',\n    },\n    largeIcon: {\n        width: 250,\n        height: 200,\n      },\n      currentTemp: {\n        fontSize: 32,\n        fontWeight: 'bold',\n        textAlign: 'center',\n      },\n      maxTemp: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        textAlign: 'center',\n      },\n      minTemp: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        textAlign: 'center',\n      },  \n\n\n})"],"mappings":";;;;;;;AAAA;;AACA;;AAGA,SAASA,eAAT,OAA0D;EAAA,IAA/BC,QAA+B,QAA/BA,QAA+B;EAAA,IAArBC,iBAAqB,QAArBA,iBAAqB;EAExD,IAAQC,IAAR,GAAwDF,QAAxD,CAAQE,IAAR;EAAA,IAAcC,OAAd,GAAwDH,QAAxD,CAAcG,OAAd;EAAA,IAAuBC,IAAvB,GAAwDJ,QAAxD,CAAuBI,IAAvB;EAAA,IAA6BC,OAA7B,GAAwDL,QAAxD,CAA6BK,OAA7B;EAAA,IAAsCC,OAAtC,GAAwDN,QAAxD,CAAsCM,OAAtC;EAAA,IAA+CC,IAA/C,GAAwDP,QAAxD,CAA+CO,IAA/C;EACA,OACI,4DACI,6BAAC,iBAAD;IAAM,KAAK,EAAEC,MAAM,CAACN;EAApB,GAA2BA,IAA3B,CADJ,EAEI,6BAAC,iBAAD;IAAM,KAAK,EAAEM,MAAM,CAACL;EAApB,GAA8BA,OAA9B,CAFJ,EAGKF,iBAAiB,KAAK,IAAtB,IACC,6BAAC,iBAAD,6BAJN,EAQI,6BAAC,iBAAD;IAAM,KAAK,EAAEO,MAAM,CAACC;EAApB,GACI,6BAAC,kBAAD;IACI,KAAK,EAAED,MAAM,CAACE,SADlB;IAEI,MAAM,EAAE;MACRC,GAAG,yCAAuCJ,IAAvC;IADK;EAFZ,EADJ,EAOI,6BAAC,iBAAD;IAAM,KAAK,EAAEC,MAAM,CAACI;EAApB,GAAkCC,IAAI,CAACC,KAAL,CAAWV,IAAX,CAAlC,UAPJ,EAQI,6BAAC,iBAAD;IAAM,KAAK,EAAEI,MAAM,CAACF;EAApB,WAAkCO,IAAI,CAACC,KAAL,CAAWR,OAAX,CAAlC,UARJ,EASI,6BAAC,iBAAD;IAAM,KAAK,EAAEE,MAAM,CAACH;EAApB,WAAkCQ,IAAI,CAACC,KAAL,CAAWT,OAAX,CAAlC,UATJ,CARJ,CADJ;AAsBD;;eAEcN,e;;;AAEf,IAAMS,MAAM,GAAGO,uBAAA,CAAWC,MAAX,CAAkB;EAC7Bd,IAAI,EAAE;IACFe,KAAK,EAAE,MADL;IAEFC,SAAS,EAAE,QAFT;IAGFC,QAAQ,EAAE,EAHR;IAIFC,KAAK,EAAE;EAJL,CADuB;EAO7BjB,OAAO,EAAE;IACLc,KAAK,EAAE,MADF;IAELC,SAAS,EAAE,QAFN;IAGLC,QAAQ,EAAE,EAHL;IAILC,KAAK,EAAE;EAJF,CAPoB;EAa7BX,OAAO,EAAE;IACLY,aAAa,EAAE,QADV;IAELC,UAAU,EAAE,UAFP;IAGLC,YAAY,EAAE;EAHT,CAboB;EAkB7Bb,SAAS,EAAE;IACPO,KAAK,EAAE,GADA;IAEPO,MAAM,EAAE;EAFD,CAlBkB;EAsB3BZ,WAAW,EAAE;IACXO,QAAQ,EAAE,EADC;IAEXM,UAAU,EAAE,MAFD;IAGXP,SAAS,EAAE;EAHA,CAtBc;EA2B3BZ,OAAO,EAAE;IACPa,QAAQ,EAAE,EADH;IAEPM,UAAU,EAAE,MAFL;IAGPP,SAAS,EAAE;EAHJ,CA3BkB;EAgC3Bb,OAAO,EAAE;IACPc,QAAQ,EAAE,EADH;IAEPM,UAAU,EAAE,MAFL;IAGPP,SAAS,EAAE;EAHJ;AAhCkB,CAAlB,CAAf"}