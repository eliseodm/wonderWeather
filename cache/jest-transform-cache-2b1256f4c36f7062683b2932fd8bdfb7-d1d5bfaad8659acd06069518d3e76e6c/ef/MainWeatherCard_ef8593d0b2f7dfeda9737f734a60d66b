c7b5be89a6bd1eecf3b15cfacd15e190
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

function MainWeatherCard(_ref) {
  var cityInfo = _ref.cityInfo,
      isCurrentLocation = _ref.isCurrentLocation;
  var city = cityInfo.city,
      country = cityInfo.country,
      temp = cityInfo.temp,
      minTemp = cityInfo.minTemp,
      maxTemp = cityInfo.maxTemp,
      icon = cityInfo.icon;
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.Text, {
    style: styles.city
  }, city), _react.default.createElement(_reactNative.Text, {
    style: styles.country
  }, country), isCurrentLocation === true && _react.default.createElement(_reactNative.Text, null, "Uicaci\xF3n actual"), _react.default.createElement(_reactNative.View, {
    style: styles.current
  }, _react.default.createElement(_reactNative.Image, {
    style: styles.largeIcon,
    source: {
      uri: "https://openweathermap.org/img/wn/" + icon + "@4x.png"
    }
  }), _react.default.createElement(_reactNative.Text, {
    style: styles.currentTemp
  }, Math.round(temp), "\xB0C"), _react.default.createElement(_reactNative.Text, {
    style: styles.maxTemp
  }, "Max ", Math.round(maxTemp), "\xB0C"), _react.default.createElement(_reactNative.Text, {
    style: styles.minTemp
  }, "Min ", Math.round(minTemp), "\xB0C")));
}

var _default = MainWeatherCard;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  city: {
    width: '100%',
    textAlign: 'center',
    fontSize: 32,
    color: '#e96e50'
  },
  country: {
    width: '100%',
    textAlign: 'center',
    fontSize: 24,
    color: '#d6a99e'
  },
  current: {
    flexDirection: 'column',
    alignItems: 'flex-end',
    alignContent: 'center'
  },
  largeIcon: {
    width: 250,
    height: 200
  },
  currentTemp: {
    fontSize: 32,
    fontWeight: 'bold',
    textAlign: 'center'
  },
  maxTemp: {
    fontSize: 16,
    fontWeight: 'bold',
    textAlign: 'center'
  },
  minTemp: {
    fontSize: 16,
    fontWeight: 'bold',
    textAlign: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYWluV2VhdGhlckNhcmQiLCJjaXR5SW5mbyIsImlzQ3VycmVudExvY2F0aW9uIiwiY2l0eSIsImNvdW50cnkiLCJ0ZW1wIiwibWluVGVtcCIsIm1heFRlbXAiLCJpY29uIiwic3R5bGVzIiwiY3VycmVudCIsImxhcmdlSWNvbiIsInVyaSIsImN1cnJlbnRUZW1wIiwiTWF0aCIsInJvdW5kIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIndpZHRoIiwidGV4dEFsaWduIiwiZm9udFNpemUiLCJjb2xvciIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwiYWxpZ25Db250ZW50IiwiaGVpZ2h0IiwiZm9udFdlaWdodCJdLCJzb3VyY2VzIjpbIk1haW5XZWF0aGVyQ2FyZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHlsZVNoZWV0LCBWaWV3LCBUZXh0LCBJbWFnZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5cbmZ1bmN0aW9uIE1haW5XZWF0aGVyQ2FyZCh7IGNpdHlJbmZvLCBpc0N1cnJlbnRMb2NhdGlvbiB9KSB7XG5cbiAgY29uc3QgeyBjaXR5LCBjb3VudHJ5LCB0ZW1wLCBtaW5UZW1wLCBtYXhUZW1wLCBpY29uIH0gPSBjaXR5SW5mbztcbiAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5jaXR5fT57Y2l0eX08L1RleHQ+XG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5jb3VudHJ5fT57Y291bnRyeX08L1RleHQ+XG4gICAgICAgICAge2lzQ3VycmVudExvY2F0aW9uID09PSB0cnVlICYmIChcbiAgICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgICBVaWNhY2nDs24gYWN0dWFsXG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmN1cnJlbnR9PlxuICAgICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMubGFyZ2VJY29ufVxuICAgICAgICAgICAgICAgICAgc291cmNlPXt7XG4gICAgICAgICAgICAgICAgICB1cmk6IGBodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29ufUA0eC5wbmdgLFxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5jdXJyZW50VGVtcH0+e01hdGgucm91bmQodGVtcCl9wrBDPC9UZXh0PlxuICAgICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLm1heFRlbXB9Pk1heCB7TWF0aC5yb3VuZChtYXhUZW1wKX3CsEM8L1RleHQ+XG4gICAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMubWluVGVtcH0+TWluIHtNYXRoLnJvdW5kKG1pblRlbXApfcKwQzwvVGV4dD5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTWFpbldlYXRoZXJDYXJkO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY2l0eToge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICBmb250U2l6ZTogMzIsXG4gICAgICAgIGNvbG9yOiAnI2U5NmU1MCdcbiAgICB9LFxuICAgIGNvdW50cnk6IHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgZm9udFNpemU6IDI0LFxuICAgICAgICBjb2xvcjogJyNkNmE5OWUnXG4gICAgfSxcbiAgICBjdXJyZW50OiB7XG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICBhbGlnbkl0ZW1zOiAnZmxleC1lbmQnLFxuICAgICAgICBhbGlnbkNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIH0sXG4gICAgbGFyZ2VJY29uOiB7XG4gICAgICAgIHdpZHRoOiAyNTAsXG4gICAgICAgIGhlaWdodDogMjAwLFxuICAgICAgfSxcbiAgICAgIGN1cnJlbnRUZW1wOiB7XG4gICAgICAgIGZvbnRTaXplOiAzMixcbiAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgfSxcbiAgICAgIG1heFRlbXA6IHtcbiAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICB9LFxuICAgICAgbWluVGVtcDoge1xuICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgIH0sICBcblxuXG59KSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUdBLFNBQVNBLGVBQVQsT0FBMEQ7RUFBQSxJQUEvQkMsUUFBK0IsUUFBL0JBLFFBQStCO0VBQUEsSUFBckJDLGlCQUFxQixRQUFyQkEsaUJBQXFCO0VBRXhELElBQVFDLElBQVIsR0FBd0RGLFFBQXhELENBQVFFLElBQVI7RUFBQSxJQUFjQyxPQUFkLEdBQXdESCxRQUF4RCxDQUFjRyxPQUFkO0VBQUEsSUFBdUJDLElBQXZCLEdBQXdESixRQUF4RCxDQUF1QkksSUFBdkI7RUFBQSxJQUE2QkMsT0FBN0IsR0FBd0RMLFFBQXhELENBQTZCSyxPQUE3QjtFQUFBLElBQXNDQyxPQUF0QyxHQUF3RE4sUUFBeEQsQ0FBc0NNLE9BQXRDO0VBQUEsSUFBK0NDLElBQS9DLEdBQXdEUCxRQUF4RCxDQUErQ08sSUFBL0M7RUFDQSxPQUNJLDREQUNJLDZCQUFDLGlCQUFEO0lBQU0sS0FBSyxFQUFFQyxNQUFNLENBQUNOO0VBQXBCLEdBQTJCQSxJQUEzQixDQURKLEVBRUksNkJBQUMsaUJBQUQ7SUFBTSxLQUFLLEVBQUVNLE1BQU0sQ0FBQ0w7RUFBcEIsR0FBOEJBLE9BQTlCLENBRkosRUFHS0YsaUJBQWlCLEtBQUssSUFBdEIsSUFDQyw2QkFBQyxpQkFBRCw2QkFKTixFQVFJLDZCQUFDLGlCQUFEO0lBQU0sS0FBSyxFQUFFTyxNQUFNLENBQUNDO0VBQXBCLEdBQ0ksNkJBQUMsa0JBQUQ7SUFDSSxLQUFLLEVBQUVELE1BQU0sQ0FBQ0UsU0FEbEI7SUFFSSxNQUFNLEVBQUU7TUFDUkMsR0FBRyx5Q0FBdUNKLElBQXZDO0lBREs7RUFGWixFQURKLEVBT0ksNkJBQUMsaUJBQUQ7SUFBTSxLQUFLLEVBQUVDLE1BQU0sQ0FBQ0k7RUFBcEIsR0FBa0NDLElBQUksQ0FBQ0MsS0FBTCxDQUFXVixJQUFYLENBQWxDLFVBUEosRUFRSSw2QkFBQyxpQkFBRDtJQUFNLEtBQUssRUFBRUksTUFBTSxDQUFDRjtFQUFwQixXQUFrQ08sSUFBSSxDQUFDQyxLQUFMLENBQVdSLE9BQVgsQ0FBbEMsVUFSSixFQVNJLDZCQUFDLGlCQUFEO0lBQU0sS0FBSyxFQUFFRSxNQUFNLENBQUNIO0VBQXBCLFdBQWtDUSxJQUFJLENBQUNDLEtBQUwsQ0FBV1QsT0FBWCxDQUFsQyxVQVRKLENBUkosQ0FESjtBQXNCRDs7ZUFFY04sZTs7O0FBRWYsSUFBTVMsTUFBTSxHQUFHTyx1QkFBQSxDQUFXQyxNQUFYLENBQWtCO0VBQzdCZCxJQUFJLEVBQUU7SUFDRmUsS0FBSyxFQUFFLE1BREw7SUFFRkMsU0FBUyxFQUFFLFFBRlQ7SUFHRkMsUUFBUSxFQUFFLEVBSFI7SUFJRkMsS0FBSyxFQUFFO0VBSkwsQ0FEdUI7RUFPN0JqQixPQUFPLEVBQUU7SUFDTGMsS0FBSyxFQUFFLE1BREY7SUFFTEMsU0FBUyxFQUFFLFFBRk47SUFHTEMsUUFBUSxFQUFFLEVBSEw7SUFJTEMsS0FBSyxFQUFFO0VBSkYsQ0FQb0I7RUFhN0JYLE9BQU8sRUFBRTtJQUNMWSxhQUFhLEVBQUUsUUFEVjtJQUVMQyxVQUFVLEVBQUUsVUFGUDtJQUdMQyxZQUFZLEVBQUU7RUFIVCxDQWJvQjtFQWtCN0JiLFNBQVMsRUFBRTtJQUNQTyxLQUFLLEVBQUUsR0FEQTtJQUVQTyxNQUFNLEVBQUU7RUFGRCxDQWxCa0I7RUFzQjNCWixXQUFXLEVBQUU7SUFDWE8sUUFBUSxFQUFFLEVBREM7SUFFWE0sVUFBVSxFQUFFLE1BRkQ7SUFHWFAsU0FBUyxFQUFFO0VBSEEsQ0F0QmM7RUEyQjNCWixPQUFPLEVBQUU7SUFDUGEsUUFBUSxFQUFFLEVBREg7SUFFUE0sVUFBVSxFQUFFLE1BRkw7SUFHUFAsU0FBUyxFQUFFO0VBSEosQ0EzQmtCO0VBZ0MzQmIsT0FBTyxFQUFFO0lBQ1BjLFFBQVEsRUFBRSxFQURIO0lBRVBNLFVBQVUsRUFBRSxNQUZMO0lBR1BQLFNBQVMsRUFBRTtFQUhKO0FBaENrQixDQUFsQixDQUFmIn0=