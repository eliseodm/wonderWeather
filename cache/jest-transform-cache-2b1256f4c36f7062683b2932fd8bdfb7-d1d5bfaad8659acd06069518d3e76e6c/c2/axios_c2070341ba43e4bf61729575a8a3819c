fd7011b590f1769f1ef7dbb2c575859b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.instanceOpenWeatherMap = exports.instanceIpAPI = void 0;

var _axios = _interopRequireDefault(require("axios"));

function cov_561izoiaj() {
  var path = "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/axios.js";
  var hash = "131e9e82f45f4c11aa90407423a2a3566cc58c03";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/eliseodiazmedina/Workspace/react-native/wonderWeather/axios.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "1": {
        start: {
          line: 10,
          column: 31
        },
        end: {
          line: 12,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "131e9e82f45f4c11aa90407423a2a3566cc58c03"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_561izoiaj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_561izoiaj();
var instanceIpAPI = (cov_561izoiaj().s[0]++, _axios.default.create({
  baseURL: "http://ip-api.com/json",
  headers: {
    "Access-Control-Allow-Origin": "*"
  }
}));
exports.instanceIpAPI = instanceIpAPI;
var instanceOpenWeatherMap = (cov_561izoiaj().s[1]++, _axios.default.create({
  baseURL: "https://api.openweathermap.org/data/2.5"
}));
exports.instanceOpenWeatherMap = instanceOpenWeatherMap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbnN0YW5jZUlwQVBJIiwiYXhpb3MiLCJjcmVhdGUiLCJiYXNlVVJMIiwiaGVhZGVycyIsImluc3RhbmNlT3BlbldlYXRoZXJNYXAiXSwic291cmNlcyI6WyJheGlvcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5cbmNvbnN0IGluc3RhbmNlSXBBUEkgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOiBcImh0dHA6Ly9pcC1hcGkuY29tL2pzb25cIixcbiAgaGVhZGVyczoge1xuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCI6IFwiKlwiLFxuICB9XG59KTtcblxuY29uc3QgaW5zdGFuY2VPcGVuV2VhdGhlck1hcCA9IGF4aW9zLmNyZWF0ZSh7XG4gIGJhc2VVUkw6IFwiaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41XCIsXG59KTtcblxuZXhwb3J0IHsgaW5zdGFuY2VJcEFQSSwgaW5zdGFuY2VPcGVuV2VhdGhlck1hcCB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhLDRCQUFHQyxjQUFBLENBQU1DLE1BQU4sQ0FBYTtFQUNqQ0MsT0FBTyxFQUFFLHdCQUR3QjtFQUVqQ0MsT0FBTyxFQUFFO0lBQ1AsK0JBQStCO0VBRHhCO0FBRndCLENBQWIsQ0FBSCxDQUFuQjs7QUFPQSxJQUFNQyxzQkFBc0IsNEJBQUdKLGNBQUEsQ0FBTUMsTUFBTixDQUFhO0VBQzFDQyxPQUFPLEVBQUU7QUFEaUMsQ0FBYixDQUFILENBQTVCIn0=